"""Car DB model

Revision ID: a7d4ebe5f6dd
Revises: 
Create Date: 2023-04-04 16:35:35.964238

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a7d4ebe5f6dd'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('aspirations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('aspirations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_aspirations_name'), ['name'], unique=False)

    op.create_table('assists',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name_full', sa.Unicode(), nullable=False),
    sa.Column('name_short', sa.Unicode(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('assists', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_assists_name_full'), ['name_full'], unique=True)
        batch_op.create_index(batch_op.f('ix_assists_name_short'), ['name_short'], unique=True)

    op.create_table('body_styles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(), nullable=False),
    sa.Column('no_of_doors', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('body_styles', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_body_styles_name'), ['name'], unique=True)

    op.create_table('car_classes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name_euro', sa.Unicode(), nullable=True),
    sa.Column('name_us', sa.Unicode(), nullable=True),
    sa.Column('name_alternative', sa.Unicode(), nullable=True),
    sa.Column('name_custom', sa.Unicode(), nullable=True),
    sa.Column('name_short', sa.Unicode(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('car_classes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_car_classes_name_alternative'), ['name_alternative'], unique=False)
        batch_op.create_index(batch_op.f('ix_car_classes_name_custom'), ['name_custom'], unique=True)
        batch_op.create_index(batch_op.f('ix_car_classes_name_euro'), ['name_euro'], unique=False)
        batch_op.create_index(batch_op.f('ix_car_classes_name_us'), ['name_us'], unique=False)

    op.create_table('combustion_engine_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('combustion_engine_types', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_combustion_engine_types_name'), ['name'], unique=True)

    op.create_table('competitions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name_full', sa.Unicode(), nullable=False),
    sa.Column('name_display', sa.Unicode(), nullable=False),
    sa.Column('name_short', sa.Unicode(), nullable=False),
    sa.Column('date_started', sa.Date(), nullable=True),
    sa.Column('date_ended', sa.Date(), nullable=True),
    sa.Column('is_virtual', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('competitions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_competitions_is_virtual'), ['is_virtual'], unique=False)
        batch_op.create_index(batch_op.f('ix_competitions_name_display'), ['name_display'], unique=False)
        batch_op.create_index(batch_op.f('ix_competitions_name_full'), ['name_full'], unique=False)
        batch_op.create_index(batch_op.f('ix_competitions_name_short'), ['name_short'], unique=False)

    op.create_table('countries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name_full', sa.Unicode(), nullable=False),
    sa.Column('name_display', sa.Unicode(), nullable=False),
    sa.Column('name_short', sa.Unicode(), nullable=False),
    sa.Column('no_of_companies_game', sa.Integer(), nullable=True),
    sa.Column('no_of_companies_car', sa.Integer(), nullable=True),
    sa.Column('no_of_games', sa.Integer(), nullable=True),
    sa.Column('no_of_cars', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('countries', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_countries_name_display'), ['name_display'], unique=False)

    op.create_table('drivetrains',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name_full', sa.Unicode(), nullable=False),
    sa.Column('name_short', sa.Unicode(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('drivetrains', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_drivetrains_name_full'), ['name_full'], unique=False)
        batch_op.create_index(batch_op.f('ix_drivetrains_name_short'), ['name_short'], unique=False)

    op.create_table('electric_engine_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('electric_engine_types', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_electric_engine_types_name'), ['name'], unique=True)

    op.create_table('engine_layouts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('engine_layouts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_engine_layouts_name'), ['name'], unique=True)

    op.create_table('fuel_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('fuel_types', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_fuel_types_name'), ['name'], unique=False)

    op.create_table('game_genres',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(), nullable=False),
    sa.Column('realism', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('realism')
    )
    with op.batch_alter_table('game_genres', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_game_genres_name'), ['name'], unique=True)

    op.create_table('game_series',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('game_series', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_game_series_name'), ['name'], unique=True)

    op.create_table('game_states',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('name', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('game_states', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_game_states_name'), ['name'], unique=True)
        batch_op.create_index(batch_op.f('ix_game_states_order'), ['order'], unique=True)

    op.create_table('images',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('path', sa.Unicode(), nullable=False),
    sa.Column('description', sa.Unicode(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('images', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_images_order'), ['order'], unique=False)

    op.create_table('instance_specializations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name_full', sa.Unicode(), nullable=False),
    sa.Column('name_short', sa.Unicode(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('instance_specializations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_instance_specializations_name_full'), ['name_full'], unique=False)
        batch_op.create_index(batch_op.f('ix_instance_specializations_name_short'), ['name_short'], unique=False)

    op.create_table('instance_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name_full', sa.Unicode(), nullable=False),
    sa.Column('name_short', sa.Unicode(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('instance_types', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_instance_types_name_full'), ['name_full'], unique=True)
        batch_op.create_index(batch_op.f('ix_instance_types_name_short'), ['name_short'], unique=True)

    op.create_table('platforms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name_full', sa.Unicode(), nullable=False),
    sa.Column('name_display', sa.Unicode(), nullable=False),
    sa.Column('name_short', sa.Unicode(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name_display'),
    sa.UniqueConstraint('name_short')
    )
    with op.batch_alter_table('platforms', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_platforms_name_full'), ['name_full'], unique=True)

    op.create_table('suspension',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name_full', sa.Unicode(), nullable=False),
    sa.Column('name_short', sa.Unicode(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('suspension', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_suspension_name_full'), ['name_full'], unique=True)
        batch_op.create_index(batch_op.f('ix_suspension_name_short'), ['name_short'], unique=True)

    op.create_table('texts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('content', sa.Unicode(), nullable=False),
    sa.Column('text_type', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('texts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_texts_order'), ['order'], unique=False)
        batch_op.create_index(batch_op.f('ix_texts_text_type'), ['text_type'], unique=False)

    op.create_table('transmission_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('transmission_types', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_transmission_types_name'), ['name'], unique=True)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.Unicode(), nullable=False),
    sa.Column('password_hash', sa.Unicode(), nullable=True),
    sa.Column('current_instance', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('companies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name_full', sa.Unicode(), nullable=False),
    sa.Column('name_display', sa.Unicode(), nullable=False),
    sa.Column('name_short', sa.Unicode(), nullable=True),
    sa.Column('description', sa.Unicode(), nullable=True),
    sa.Column('is_game_developer', sa.Boolean(), nullable=False),
    sa.Column('is_game_publisher', sa.Boolean(), nullable=False),
    sa.Column('is_car_manufacturer', sa.Boolean(), nullable=False),
    sa.Column('is_car_part_manufacturer', sa.Boolean(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('country_id', sa.Integer(), nullable=True),
    sa.Column('date_established', sa.Date(), nullable=True),
    sa.Column('date_ceased_to_exist', sa.Date(), nullable=True),
    sa.Column('no_of_games_developed', sa.Integer(), nullable=True),
    sa.Column('no_of_cars_produced', sa.Integer(), nullable=True),
    sa.Column('no_of_parts_produced', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('companies', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_companies_country_id'), ['country_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_companies_date_established'), ['date_established'], unique=False)
        batch_op.create_index(batch_op.f('ix_companies_is_car_manufacturer'), ['is_car_manufacturer'], unique=False)
        batch_op.create_index(batch_op.f('ix_companies_is_car_part_manufacturer'), ['is_car_part_manufacturer'], unique=False)
        batch_op.create_index(batch_op.f('ix_companies_is_game_developer'), ['is_game_developer'], unique=False)
        batch_op.create_index(batch_op.f('ix_companies_is_game_publisher'), ['is_game_publisher'], unique=False)
        batch_op.create_index(batch_op.f('ix_companies_name_display'), ['name_display'], unique=False)
        batch_op.create_index(batch_op.f('ix_companies_owner_id'), ['owner_id'], unique=False)

    op.create_table('images_competitions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('competition_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['competition_id'], ['competitions.id'], ),
    sa.ForeignKeyConstraint(['id'], ['images.id'], ),
    sa.PrimaryKeyConstraint('id', 'competition_id')
    )
    op.create_table('images_countries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], ),
    sa.ForeignKeyConstraint(['id'], ['images.id'], ),
    sa.PrimaryKeyConstraint('id', 'country_id')
    )
    op.create_table('images_game_series',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_logo', sa.Boolean(), nullable=False),
    sa.Column('game_series_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['game_series_id'], ['game_series.id'], ),
    sa.ForeignKeyConstraint(['id'], ['images.id'], ),
    sa.PrimaryKeyConstraint('id', 'game_series_id')
    )
    with op.batch_alter_table('images_game_series', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_images_game_series_is_logo'), ['is_logo'], unique=False)

    op.create_table('images_platforms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_logo', sa.Boolean(), nullable=False),
    sa.Column('platform_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['images.id'], ),
    sa.ForeignKeyConstraint(['platform_id'], ['platforms.id'], ),
    sa.PrimaryKeyConstraint('id', 'platform_id')
    )
    with op.batch_alter_table('images_platforms', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_images_platforms_is_logo'), ['is_logo'], unique=False)

    op.create_table('images_suspension',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('suspension_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['images.id'], ),
    sa.ForeignKeyConstraint(['suspension_id'], ['suspension.id'], ),
    sa.PrimaryKeyConstraint('id', 'suspension_id')
    )
    op.create_table('locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(), nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=True),
    sa.Column('is_fictional', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('locations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_locations_is_fictional'), ['is_fictional'], unique=False)
        batch_op.create_index(batch_op.f('ix_locations_name'), ['name'], unique=False)

    op.create_table('texts_competitions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('competition_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['competition_id'], ['competitions.id'], ),
    sa.ForeignKeyConstraint(['id'], ['texts.id'], ),
    sa.PrimaryKeyConstraint('id', 'competition_id')
    )
    op.create_table('texts_countries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], ),
    sa.ForeignKeyConstraint(['id'], ['texts.id'], ),
    sa.PrimaryKeyConstraint('id', 'country_id')
    )
    op.create_table('texts_game_series',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('game_series_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['game_series_id'], ['game_series.id'], ),
    sa.ForeignKeyConstraint(['id'], ['texts.id'], ),
    sa.PrimaryKeyConstraint('id', 'game_series_id')
    )
    op.create_table('texts_platforms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('platform_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['texts.id'], ),
    sa.ForeignKeyConstraint(['platform_id'], ['platforms.id'], ),
    sa.PrimaryKeyConstraint('id', 'platform_id')
    )
    op.create_table('texts_suspension',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('suspension_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['texts.id'], ),
    sa.ForeignKeyConstraint(['suspension_id'], ['suspension.id'], ),
    sa.PrimaryKeyConstraint('id', 'suspension_id')
    )
    op.create_table('engines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('manufacturer_id', sa.Integer(), nullable=True),
    sa.Column('name_official', sa.Unicode(), nullable=True),
    sa.Column('name_display', sa.Unicode(), nullable=False),
    sa.Column('fuel_type_id', sa.Integer(), nullable=False),
    sa.Column('max_power_output_kw', sa.Double(), nullable=True),
    sa.Column('max_power_output_rpm', sa.Integer(), nullable=True),
    sa.Column('max_torque_nm', sa.Double(), nullable=True),
    sa.Column('max_torque_rpm', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['fuel_type_id'], ['fuel_types.id'], ),
    sa.ForeignKeyConstraint(['manufacturer_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('engines', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_engines_fuel_type_id'), ['fuel_type_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_engines_manufacturer_id'), ['manufacturer_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_engines_max_power_output_kw'), ['max_power_output_kw'], unique=False)
        batch_op.create_index(batch_op.f('ix_engines_max_torque_nm'), ['max_torque_nm'], unique=False)
        batch_op.create_index(batch_op.f('ix_engines_name_display'), ['name_display'], unique=False)
        batch_op.create_index(batch_op.f('ix_engines_name_official'), ['name_official'], unique=False)

    op.create_table('forced_induction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('manufacturer_id', sa.Integer(), nullable=True),
    sa.Column('name_official', sa.Unicode(), nullable=True),
    sa.Column('name_display', sa.Unicode(), nullable=False),
    sa.Column('boost_pressure_bar', sa.Double(), nullable=True),
    sa.Column('force_induction_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['force_induction_type_id'], ['aspirations.id'], ),
    sa.ForeignKeyConstraint(['manufacturer_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('forced_induction', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_forced_induction_force_induction_type_id'), ['force_induction_type_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_forced_induction_manufacturer_id'), ['manufacturer_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_forced_induction_name_display'), ['name_display'], unique=False)
        batch_op.create_index(batch_op.f('ix_forced_induction_name_official'), ['name_official'], unique=False)

    op.create_table('games',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('datetime_added', sa.DateTime(), nullable=False),
    sa.Column('datetime_edited', sa.DateTime(), nullable=False),
    sa.Column('datetime_played', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('name_full', sa.Unicode(), nullable=False),
    sa.Column('name_display', sa.Unicode(), nullable=False),
    sa.Column('name_short', sa.Unicode(), nullable=False),
    sa.Column('game_series_id', sa.Integer(), nullable=True),
    sa.Column('order_in_series', sa.Integer(), nullable=True),
    sa.Column('developer_id', sa.Integer(), nullable=False),
    sa.Column('date_released', sa.Date(), nullable=True),
    sa.Column('genre_id', sa.Integer(), nullable=False),
    sa.Column('game_state_id', sa.Integer(), nullable=True),
    sa.Column('no_of_instances', sa.Integer(), nullable=False),
    sa.Column('no_of_times_played', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['developer_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['game_series_id'], ['game_series.id'], ),
    sa.ForeignKeyConstraint(['game_state_id'], ['game_states.id'], ),
    sa.ForeignKeyConstraint(['genre_id'], ['game_genres.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('games', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_games_date_released'), ['date_released'], unique=False)
        batch_op.create_index(batch_op.f('ix_games_datetime_added'), ['datetime_added'], unique=False)
        batch_op.create_index(batch_op.f('ix_games_datetime_edited'), ['datetime_edited'], unique=False)
        batch_op.create_index(batch_op.f('ix_games_datetime_played'), ['datetime_played'], unique=False)
        batch_op.create_index(batch_op.f('ix_games_developer_id'), ['developer_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_games_game_series_id'), ['game_series_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_games_genre_id'), ['genre_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_games_is_deleted'), ['is_deleted'], unique=False)
        batch_op.create_index(batch_op.f('ix_games_name_full'), ['name_full'], unique=False)

    op.create_table('images_companies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['id'], ['images.id'], ),
    sa.PrimaryKeyConstraint('id', 'company_id')
    )
    op.create_table('images_locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_plan', sa.Boolean(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['images.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id', 'location_id')
    )
    with op.batch_alter_table('images_locations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_images_locations_is_plan'), ['is_plan'], unique=False)

    op.create_table('texts_companies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['id'], ['texts.id'], ),
    sa.PrimaryKeyConstraint('id', 'company_id')
    )
    op.create_table('texts_locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['texts.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id', 'location_id')
    )
    op.create_table('transmissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('manufacturer_id', sa.Integer(), nullable=True),
    sa.Column('name_official', sa.Unicode(), nullable=True),
    sa.Column('name_display', sa.Unicode(), nullable=False),
    sa.Column('no_of_gears', sa.Integer(), nullable=False),
    sa.Column('type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['manufacturer_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['transmission_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('transmissions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_transmissions_manufacturer_id'), ['manufacturer_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_transmissions_name_display'), ['name_display'], unique=False)
        batch_op.create_index(batch_op.f('ix_transmissions_name_official'), ['name_official'], unique=False)
        batch_op.create_index(batch_op.f('ix_transmissions_no_of_gears'), ['no_of_gears'], unique=False)
        batch_op.create_index(batch_op.f('ix_transmissions_type_id'), ['type_id'], unique=False)

    op.create_table('cars',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('datetime_added', sa.DateTime(), nullable=False),
    sa.Column('datetime_edited', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('manufacturers_display', sa.Unicode(), nullable=False),
    sa.Column('model', sa.Unicode(), nullable=False),
    sa.Column('name_display', sa.Unicode(), nullable=False),
    sa.Column('name_short', sa.Unicode(), nullable=True),
    sa.Column('country_id', sa.Integer(), nullable=True),
    sa.Column('is_prototype', sa.Boolean(), nullable=False),
    sa.Column('is_fictional', sa.Boolean(), nullable=False),
    sa.Column('car_class_id', sa.Integer(), nullable=True),
    sa.Column('body_style_id', sa.Integer(), nullable=False),
    sa.Column('fuel_type_actual_id', sa.Integer(), nullable=True),
    sa.Column('max_power_output_kw_actual', sa.Double(), nullable=True),
    sa.Column('max_power_output_rpm_actual', sa.Integer(), nullable=True),
    sa.Column('max_torque_nm_actual', sa.Double(), nullable=True),
    sa.Column('max_torque_rpm_actual', sa.Integer(), nullable=True),
    sa.Column('additional_forced_induction_id', sa.Integer(), nullable=True),
    sa.Column('transmission_id', sa.Integer(), nullable=True),
    sa.Column('transmission_type_actual_id', sa.Integer(), nullable=True),
    sa.Column('no_of_gears_actual', sa.Integer(), nullable=True),
    sa.Column('engine_layout_id', sa.Integer(), nullable=False),
    sa.Column('drivetrain_id', sa.Integer(), nullable=False),
    sa.Column('suspension_front_id', sa.Integer(), nullable=True),
    sa.Column('suspension_rear_id', sa.Integer(), nullable=True),
    sa.Column('curb_weight_kg', sa.Double(), nullable=True),
    sa.Column('weight_distribution', sa.Double(), nullable=True),
    sa.Column('tires_front', sa.Unicode(), nullable=True),
    sa.Column('tires_rear', sa.Unicode(), nullable=True),
    sa.Column('acceleration_0_to_100_kmh_sec', sa.Double(), nullable=True),
    sa.Column('maximum_speed_kmh', sa.Double(), nullable=True),
    sa.Column('power_to_weight_ratio', sa.Double(), nullable=True),
    sa.Column('no_of_instances', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['additional_forced_induction_id'], ['forced_induction.id'], ),
    sa.ForeignKeyConstraint(['body_style_id'], ['body_styles.id'], ),
    sa.ForeignKeyConstraint(['car_class_id'], ['car_classes.id'], ),
    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], ),
    sa.ForeignKeyConstraint(['drivetrain_id'], ['drivetrains.id'], ),
    sa.ForeignKeyConstraint(['engine_layout_id'], ['engine_layouts.id'], ),
    sa.ForeignKeyConstraint(['fuel_type_actual_id'], ['fuel_types.id'], ),
    sa.ForeignKeyConstraint(['suspension_front_id'], ['suspension.id'], ),
    sa.ForeignKeyConstraint(['suspension_rear_id'], ['suspension.id'], ),
    sa.ForeignKeyConstraint(['transmission_id'], ['transmissions.id'], ),
    sa.ForeignKeyConstraint(['transmission_type_actual_id'], ['transmission_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('cars', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_cars_acceleration_0_to_100_kmh_sec'), ['acceleration_0_to_100_kmh_sec'], unique=False)
        batch_op.create_index(batch_op.f('ix_cars_body_style_id'), ['body_style_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_cars_car_class_id'), ['car_class_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_cars_curb_weight_kg'), ['curb_weight_kg'], unique=False)
        batch_op.create_index(batch_op.f('ix_cars_datetime_added'), ['datetime_added'], unique=False)
        batch_op.create_index(batch_op.f('ix_cars_datetime_edited'), ['datetime_edited'], unique=False)
        batch_op.create_index(batch_op.f('ix_cars_drivetrain_id'), ['drivetrain_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_cars_engine_layout_id'), ['engine_layout_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_cars_fuel_type_actual_id'), ['fuel_type_actual_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_cars_is_deleted'), ['is_deleted'], unique=False)
        batch_op.create_index(batch_op.f('ix_cars_is_fictional'), ['is_fictional'], unique=False)
        batch_op.create_index(batch_op.f('ix_cars_is_prototype'), ['is_prototype'], unique=False)
        batch_op.create_index(batch_op.f('ix_cars_manufacturers_display'), ['manufacturers_display'], unique=False)
        batch_op.create_index(batch_op.f('ix_cars_max_power_output_kw_actual'), ['max_power_output_kw_actual'], unique=False)
        batch_op.create_index(batch_op.f('ix_cars_max_torque_nm_actual'), ['max_torque_nm_actual'], unique=False)
        batch_op.create_index(batch_op.f('ix_cars_maximum_speed_kmh'), ['maximum_speed_kmh'], unique=False)
        batch_op.create_index(batch_op.f('ix_cars_model'), ['model'], unique=False)
        batch_op.create_index(batch_op.f('ix_cars_name_display'), ['name_display'], unique=True)
        batch_op.create_index(batch_op.f('ix_cars_no_of_gears_actual'), ['no_of_gears_actual'], unique=False)
        batch_op.create_index(batch_op.f('ix_cars_no_of_instances'), ['no_of_instances'], unique=False)
        batch_op.create_index(batch_op.f('ix_cars_power_to_weight_ratio'), ['power_to_weight_ratio'], unique=False)
        batch_op.create_index(batch_op.f('ix_cars_suspension_front_id'), ['suspension_front_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_cars_suspension_rear_id'), ['suspension_rear_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_cars_weight_distribution'), ['weight_distribution'], unique=False)
        batch_op.create_index(batch_op.f('ix_cars_year'), ['year'], unique=False)

    op.create_table('combustion_engines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('combustion_engine_type_id', sa.Integer(), nullable=True),
    sa.Column('displacement', sa.Double(), nullable=True),
    sa.Column('aspiration_id', sa.Integer(), nullable=True),
    sa.Column('valves_per_cylinder', sa.Integer(), nullable=True),
    sa.Column('cylinder_alignment', sa.Unicode(), nullable=True),
    sa.ForeignKeyConstraint(['aspiration_id'], ['aspirations.id'], ),
    sa.ForeignKeyConstraint(['combustion_engine_type_id'], ['combustion_engine_types.id'], ),
    sa.ForeignKeyConstraint(['id'], ['engines.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('combustion_engines', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_combustion_engines_combustion_engine_type_id'), ['combustion_engine_type_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_combustion_engines_displacement'), ['displacement'], unique=False)

    op.create_table('electric_engines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('electric_engine_type_id', sa.Integer(), nullable=True),
    sa.Column('battery_voltage', sa.Integer(), nullable=True),
    sa.Column('battery_technology', sa.Unicode(), nullable=True),
    sa.ForeignKeyConstraint(['electric_engine_type_id'], ['electric_engine_types.id'], ),
    sa.ForeignKeyConstraint(['id'], ['engines.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('electric_engines', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_electric_engines_battery_technology'), ['battery_technology'], unique=False)
        batch_op.create_index(batch_op.f('ix_electric_engines_battery_voltage'), ['battery_voltage'], unique=False)
        batch_op.create_index(batch_op.f('ix_electric_engines_electric_engine_type_id'), ['electric_engine_type_id'], unique=False)

    op.create_table('game_activities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(), nullable=False),
    sa.Column('description', sa.Unicode(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('game_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('game_activities', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_game_activities_name'), ['name'], unique=False)

    op.create_table('game_platform',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('game_id', sa.Integer(), nullable=True),
    sa.Column('platform_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ),
    sa.ForeignKeyConstraint(['platform_id'], ['platforms.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('images_engines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('engine_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['engine_id'], ['engines.id'], ),
    sa.ForeignKeyConstraint(['id'], ['images.id'], ),
    sa.PrimaryKeyConstraint('id', 'engine_id')
    )
    op.create_table('images_forced_induction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('forced_induction_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['forced_induction_id'], ['forced_induction.id'], ),
    sa.ForeignKeyConstraint(['id'], ['images.id'], ),
    sa.PrimaryKeyConstraint('id', 'forced_induction_id')
    )
    op.create_table('images_games',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_logo', sa.Boolean(), nullable=False),
    sa.Column('game_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ),
    sa.ForeignKeyConstraint(['id'], ['images.id'], ),
    sa.PrimaryKeyConstraint('id', 'game_id')
    )
    with op.batch_alter_table('images_games', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_images_games_is_logo'), ['is_logo'], unique=False)

    op.create_table('images_transmissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transmission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['images.id'], ),
    sa.ForeignKeyConstraint(['transmission_id'], ['transmissions.id'], ),
    sa.PrimaryKeyConstraint('id', 'transmission_id')
    )
    op.create_table('texts_engines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('engine_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['engine_id'], ['engines.id'], ),
    sa.ForeignKeyConstraint(['id'], ['texts.id'], ),
    sa.PrimaryKeyConstraint('id', 'engine_id')
    )
    op.create_table('texts_forced_induction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('forced_induction_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['forced_induction_id'], ['forced_induction.id'], ),
    sa.ForeignKeyConstraint(['id'], ['texts.id'], ),
    sa.PrimaryKeyConstraint('id', 'forced_induction_id')
    )
    op.create_table('texts_games',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('game_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ),
    sa.ForeignKeyConstraint(['id'], ['texts.id'], ),
    sa.PrimaryKeyConstraint('id', 'game_id')
    )
    op.create_table('texts_transmissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transmission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['texts.id'], ),
    sa.ForeignKeyConstraint(['transmission_id'], ['transmissions.id'], ),
    sa.PrimaryKeyConstraint('id', 'transmission_id')
    )
    op.create_table('car_assist',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('car_id', sa.Integer(), nullable=True),
    sa.Column('assist_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['assist_id'], ['assists.id'], ),
    sa.ForeignKeyConstraint(['car_id'], ['cars.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('car_competition',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('car_id', sa.Integer(), nullable=True),
    sa.Column('competition_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['car_id'], ['cars.id'], ),
    sa.ForeignKeyConstraint(['competition_id'], ['competitions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('car_engine',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('car_id', sa.Integer(), nullable=True),
    sa.Column('engine_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['car_id'], ['cars.id'], ),
    sa.ForeignKeyConstraint(['engine_id'], ['engines.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('car_manufacturer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('car_id', sa.Integer(), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.Column('is_primary', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['car_id'], ['cars.id'], ),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('car_manufacturer', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_car_manufacturer_is_primary'), ['is_primary'], unique=False)

    op.create_table('images_cars',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_thumbnail', sa.Boolean(), nullable=False),
    sa.Column('car_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['car_id'], ['cars.id'], ),
    sa.ForeignKeyConstraint(['id'], ['images.id'], ),
    sa.PrimaryKeyConstraint('id', 'car_id')
    )
    with op.batch_alter_table('images_cars', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_images_cars_is_thumbnail'), ['is_thumbnail'], unique=False)

    op.create_table('instances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('datetime_added', sa.DateTime(), nullable=False),
    sa.Column('datetime_edited', sa.DateTime(), nullable=False),
    sa.Column('datetime_played', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('name_full', sa.Unicode(), nullable=False),
    sa.Column('name_nickname', sa.Unicode(), nullable=False),
    sa.Column('instance_type_id', sa.Integer(), nullable=True),
    sa.Column('specialization_id', sa.Integer(), nullable=True),
    sa.Column('is_complete', sa.Boolean(), nullable=False),
    sa.Column('is_for_collection', sa.Boolean(), nullable=False),
    sa.Column('car_id', sa.Integer(), nullable=False),
    sa.Column('game_id', sa.Integer(), nullable=False),
    sa.Column('color_name', sa.Unicode(), nullable=True),
    sa.Column('color_hex', sa.Unicode(), nullable=True),
    sa.Column('theme', sa.Unicode(), nullable=True),
    sa.Column('fuel_type_actual_id', sa.Integer(), nullable=True),
    sa.Column('max_power_output_kw_actual', sa.Double(), nullable=True),
    sa.Column('max_power_output_rpm_actual', sa.Integer(), nullable=True),
    sa.Column('max_torque_nm_actual', sa.Double(), nullable=True),
    sa.Column('max_torque_rpm_actual', sa.Integer(), nullable=True),
    sa.Column('additional_forced_induction_id', sa.Integer(), nullable=True),
    sa.Column('transmission_id', sa.Integer(), nullable=True),
    sa.Column('transmission_type_actual_id', sa.Integer(), nullable=True),
    sa.Column('no_of_gears_actual', sa.Integer(), nullable=True),
    sa.Column('engine_layout_id', sa.Integer(), nullable=False),
    sa.Column('drivetrain_id', sa.Integer(), nullable=False),
    sa.Column('suspension_front_id', sa.Integer(), nullable=True),
    sa.Column('suspension_rear_id', sa.Integer(), nullable=True),
    sa.Column('curb_weight_kg', sa.Double(), nullable=True),
    sa.Column('weight_distribution', sa.Double(), nullable=True),
    sa.Column('tires_front', sa.Unicode(), nullable=True),
    sa.Column('tires_rear', sa.Unicode(), nullable=True),
    sa.Column('acceleration_0_to_100_kmh_sec', sa.Double(), nullable=True),
    sa.Column('maximum_speed_kmh', sa.Double(), nullable=True),
    sa.Column('power_to_weight_ratio', sa.Double(), nullable=True),
    sa.Column('no_of_sessions', sa.Integer(), nullable=False),
    sa.Column('no_of_events_total', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['additional_forced_induction_id'], ['forced_induction.id'], ),
    sa.ForeignKeyConstraint(['car_id'], ['cars.id'], ),
    sa.ForeignKeyConstraint(['drivetrain_id'], ['drivetrains.id'], ),
    sa.ForeignKeyConstraint(['engine_layout_id'], ['engine_layouts.id'], ),
    sa.ForeignKeyConstraint(['fuel_type_actual_id'], ['fuel_types.id'], ),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ),
    sa.ForeignKeyConstraint(['instance_type_id'], ['instance_types.id'], ),
    sa.ForeignKeyConstraint(['specialization_id'], ['instance_specializations.id'], ),
    sa.ForeignKeyConstraint(['suspension_front_id'], ['suspension.id'], ),
    sa.ForeignKeyConstraint(['suspension_rear_id'], ['suspension.id'], ),
    sa.ForeignKeyConstraint(['transmission_id'], ['transmissions.id'], ),
    sa.ForeignKeyConstraint(['transmission_type_actual_id'], ['transmission_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('instances', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_instances_acceleration_0_to_100_kmh_sec'), ['acceleration_0_to_100_kmh_sec'], unique=False)
        batch_op.create_index(batch_op.f('ix_instances_car_id'), ['car_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_instances_color_name'), ['color_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_instances_curb_weight_kg'), ['curb_weight_kg'], unique=False)
        batch_op.create_index(batch_op.f('ix_instances_datetime_added'), ['datetime_added'], unique=False)
        batch_op.create_index(batch_op.f('ix_instances_datetime_edited'), ['datetime_edited'], unique=False)
        batch_op.create_index(batch_op.f('ix_instances_datetime_played'), ['datetime_played'], unique=False)
        batch_op.create_index(batch_op.f('ix_instances_drivetrain_id'), ['drivetrain_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_instances_engine_layout_id'), ['engine_layout_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_instances_fuel_type_actual_id'), ['fuel_type_actual_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_instances_game_id'), ['game_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_instances_instance_type_id'), ['instance_type_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_instances_is_complete'), ['is_complete'], unique=False)
        batch_op.create_index(batch_op.f('ix_instances_is_deleted'), ['is_deleted'], unique=False)
        batch_op.create_index(batch_op.f('ix_instances_is_for_collection'), ['is_for_collection'], unique=False)
        batch_op.create_index(batch_op.f('ix_instances_max_power_output_kw_actual'), ['max_power_output_kw_actual'], unique=False)
        batch_op.create_index(batch_op.f('ix_instances_max_torque_nm_actual'), ['max_torque_nm_actual'], unique=False)
        batch_op.create_index(batch_op.f('ix_instances_maximum_speed_kmh'), ['maximum_speed_kmh'], unique=False)
        batch_op.create_index(batch_op.f('ix_instances_name_full'), ['name_full'], unique=False)
        batch_op.create_index(batch_op.f('ix_instances_name_nickname'), ['name_nickname'], unique=True)
        batch_op.create_index(batch_op.f('ix_instances_no_of_events_total'), ['no_of_events_total'], unique=False)
        batch_op.create_index(batch_op.f('ix_instances_no_of_gears_actual'), ['no_of_gears_actual'], unique=False)
        batch_op.create_index(batch_op.f('ix_instances_no_of_sessions'), ['no_of_sessions'], unique=False)
        batch_op.create_index(batch_op.f('ix_instances_power_to_weight_ratio'), ['power_to_weight_ratio'], unique=False)
        batch_op.create_index(batch_op.f('ix_instances_specialization_id'), ['specialization_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_instances_suspension_front_id'), ['suspension_front_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_instances_suspension_rear_id'), ['suspension_rear_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_instances_theme'), ['theme'], unique=False)
        batch_op.create_index(batch_op.f('ix_instances_weight_distribution'), ['weight_distribution'], unique=False)

    op.create_table('texts_cars',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('car_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['car_id'], ['cars.id'], ),
    sa.ForeignKeyConstraint(['id'], ['texts.id'], ),
    sa.PrimaryKeyConstraint('id', 'car_id')
    )
    op.create_table('images_instances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_thumbnail', sa.Boolean(), nullable=False),
    sa.Column('instance_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['images.id'], ),
    sa.ForeignKeyConstraint(['instance_id'], ['instances.id'], ),
    sa.PrimaryKeyConstraint('id', 'instance_id')
    )
    with op.batch_alter_table('images_instances', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_images_instances_is_thumbnail'), ['is_thumbnail'], unique=False)

    op.create_table('instance_assist',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('instance_id', sa.Integer(), nullable=True),
    sa.Column('assist_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['assist_id'], ['assists.id'], ),
    sa.ForeignKeyConstraint(['instance_id'], ['instances.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('instance_engine',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('instance_id', sa.Integer(), nullable=True),
    sa.Column('engine_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['engine_id'], ['engines.id'], ),
    sa.ForeignKeyConstraint(['instance_id'], ['instances.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('instances_ct',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['instances.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('instances_racing',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('no_of_events_won', sa.Integer(), nullable=False),
    sa.Column('no_of_events_won_percent', sa.Double(), nullable=True),
    sa.Column('no_of_events_podium', sa.Integer(), nullable=False),
    sa.Column('no_of_events_podium_percent', sa.Double(), nullable=True),
    sa.Column('no_of_events_lost', sa.Integer(), nullable=False),
    sa.Column('no_of_events_lost_percent', sa.Double(), nullable=True),
    sa.Column('no_of_events_dnf', sa.Integer(), nullable=False),
    sa.Column('no_of_events_dnf_percent', sa.Double(), nullable=True),
    sa.Column('average_position', sa.Double(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['instances.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('instances_racing', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_instances_racing_average_position'), ['average_position'], unique=False)
        batch_op.create_index(batch_op.f('ix_instances_racing_no_of_events_dnf'), ['no_of_events_dnf'], unique=False)
        batch_op.create_index(batch_op.f('ix_instances_racing_no_of_events_dnf_percent'), ['no_of_events_dnf_percent'], unique=False)
        batch_op.create_index(batch_op.f('ix_instances_racing_no_of_events_lost'), ['no_of_events_lost'], unique=False)
        batch_op.create_index(batch_op.f('ix_instances_racing_no_of_events_lost_percent'), ['no_of_events_lost_percent'], unique=False)
        batch_op.create_index(batch_op.f('ix_instances_racing_no_of_events_podium'), ['no_of_events_podium'], unique=False)
        batch_op.create_index(batch_op.f('ix_instances_racing_no_of_events_podium_percent'), ['no_of_events_podium_percent'], unique=False)
        batch_op.create_index(batch_op.f('ix_instances_racing_no_of_events_won'), ['no_of_events_won'], unique=False)
        batch_op.create_index(batch_op.f('ix_instances_racing_no_of_events_won_percent'), ['no_of_events_won_percent'], unique=False)

    op.create_table('texts_instances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('instance_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['texts.id'], ),
    sa.ForeignKeyConstraint(['instance_id'], ['instances.id'], ),
    sa.PrimaryKeyConstraint('id', 'instance_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('texts_instances')
    with op.batch_alter_table('instances_racing', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_instances_racing_no_of_events_won_percent'))
        batch_op.drop_index(batch_op.f('ix_instances_racing_no_of_events_won'))
        batch_op.drop_index(batch_op.f('ix_instances_racing_no_of_events_podium_percent'))
        batch_op.drop_index(batch_op.f('ix_instances_racing_no_of_events_podium'))
        batch_op.drop_index(batch_op.f('ix_instances_racing_no_of_events_lost_percent'))
        batch_op.drop_index(batch_op.f('ix_instances_racing_no_of_events_lost'))
        batch_op.drop_index(batch_op.f('ix_instances_racing_no_of_events_dnf_percent'))
        batch_op.drop_index(batch_op.f('ix_instances_racing_no_of_events_dnf'))
        batch_op.drop_index(batch_op.f('ix_instances_racing_average_position'))

    op.drop_table('instances_racing')
    op.drop_table('instances_ct')
    op.drop_table('instance_engine')
    op.drop_table('instance_assist')
    with op.batch_alter_table('images_instances', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_images_instances_is_thumbnail'))

    op.drop_table('images_instances')
    op.drop_table('texts_cars')
    with op.batch_alter_table('instances', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_instances_weight_distribution'))
        batch_op.drop_index(batch_op.f('ix_instances_theme'))
        batch_op.drop_index(batch_op.f('ix_instances_suspension_rear_id'))
        batch_op.drop_index(batch_op.f('ix_instances_suspension_front_id'))
        batch_op.drop_index(batch_op.f('ix_instances_specialization_id'))
        batch_op.drop_index(batch_op.f('ix_instances_power_to_weight_ratio'))
        batch_op.drop_index(batch_op.f('ix_instances_no_of_sessions'))
        batch_op.drop_index(batch_op.f('ix_instances_no_of_gears_actual'))
        batch_op.drop_index(batch_op.f('ix_instances_no_of_events_total'))
        batch_op.drop_index(batch_op.f('ix_instances_name_nickname'))
        batch_op.drop_index(batch_op.f('ix_instances_name_full'))
        batch_op.drop_index(batch_op.f('ix_instances_maximum_speed_kmh'))
        batch_op.drop_index(batch_op.f('ix_instances_max_torque_nm_actual'))
        batch_op.drop_index(batch_op.f('ix_instances_max_power_output_kw_actual'))
        batch_op.drop_index(batch_op.f('ix_instances_is_for_collection'))
        batch_op.drop_index(batch_op.f('ix_instances_is_deleted'))
        batch_op.drop_index(batch_op.f('ix_instances_is_complete'))
        batch_op.drop_index(batch_op.f('ix_instances_instance_type_id'))
        batch_op.drop_index(batch_op.f('ix_instances_game_id'))
        batch_op.drop_index(batch_op.f('ix_instances_fuel_type_actual_id'))
        batch_op.drop_index(batch_op.f('ix_instances_engine_layout_id'))
        batch_op.drop_index(batch_op.f('ix_instances_drivetrain_id'))
        batch_op.drop_index(batch_op.f('ix_instances_datetime_played'))
        batch_op.drop_index(batch_op.f('ix_instances_datetime_edited'))
        batch_op.drop_index(batch_op.f('ix_instances_datetime_added'))
        batch_op.drop_index(batch_op.f('ix_instances_curb_weight_kg'))
        batch_op.drop_index(batch_op.f('ix_instances_color_name'))
        batch_op.drop_index(batch_op.f('ix_instances_car_id'))
        batch_op.drop_index(batch_op.f('ix_instances_acceleration_0_to_100_kmh_sec'))

    op.drop_table('instances')
    with op.batch_alter_table('images_cars', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_images_cars_is_thumbnail'))

    op.drop_table('images_cars')
    with op.batch_alter_table('car_manufacturer', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_car_manufacturer_is_primary'))

    op.drop_table('car_manufacturer')
    op.drop_table('car_engine')
    op.drop_table('car_competition')
    op.drop_table('car_assist')
    op.drop_table('texts_transmissions')
    op.drop_table('texts_games')
    op.drop_table('texts_forced_induction')
    op.drop_table('texts_engines')
    op.drop_table('images_transmissions')
    with op.batch_alter_table('images_games', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_images_games_is_logo'))

    op.drop_table('images_games')
    op.drop_table('images_forced_induction')
    op.drop_table('images_engines')
    op.drop_table('game_platform')
    with op.batch_alter_table('game_activities', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_game_activities_name'))

    op.drop_table('game_activities')
    with op.batch_alter_table('electric_engines', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_electric_engines_electric_engine_type_id'))
        batch_op.drop_index(batch_op.f('ix_electric_engines_battery_voltage'))
        batch_op.drop_index(batch_op.f('ix_electric_engines_battery_technology'))

    op.drop_table('electric_engines')
    with op.batch_alter_table('combustion_engines', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_combustion_engines_displacement'))
        batch_op.drop_index(batch_op.f('ix_combustion_engines_combustion_engine_type_id'))

    op.drop_table('combustion_engines')
    with op.batch_alter_table('cars', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_cars_year'))
        batch_op.drop_index(batch_op.f('ix_cars_weight_distribution'))
        batch_op.drop_index(batch_op.f('ix_cars_suspension_rear_id'))
        batch_op.drop_index(batch_op.f('ix_cars_suspension_front_id'))
        batch_op.drop_index(batch_op.f('ix_cars_power_to_weight_ratio'))
        batch_op.drop_index(batch_op.f('ix_cars_no_of_instances'))
        batch_op.drop_index(batch_op.f('ix_cars_no_of_gears_actual'))
        batch_op.drop_index(batch_op.f('ix_cars_name_display'))
        batch_op.drop_index(batch_op.f('ix_cars_model'))
        batch_op.drop_index(batch_op.f('ix_cars_maximum_speed_kmh'))
        batch_op.drop_index(batch_op.f('ix_cars_max_torque_nm_actual'))
        batch_op.drop_index(batch_op.f('ix_cars_max_power_output_kw_actual'))
        batch_op.drop_index(batch_op.f('ix_cars_manufacturers_display'))
        batch_op.drop_index(batch_op.f('ix_cars_is_prototype'))
        batch_op.drop_index(batch_op.f('ix_cars_is_fictional'))
        batch_op.drop_index(batch_op.f('ix_cars_is_deleted'))
        batch_op.drop_index(batch_op.f('ix_cars_fuel_type_actual_id'))
        batch_op.drop_index(batch_op.f('ix_cars_engine_layout_id'))
        batch_op.drop_index(batch_op.f('ix_cars_drivetrain_id'))
        batch_op.drop_index(batch_op.f('ix_cars_datetime_edited'))
        batch_op.drop_index(batch_op.f('ix_cars_datetime_added'))
        batch_op.drop_index(batch_op.f('ix_cars_curb_weight_kg'))
        batch_op.drop_index(batch_op.f('ix_cars_car_class_id'))
        batch_op.drop_index(batch_op.f('ix_cars_body_style_id'))
        batch_op.drop_index(batch_op.f('ix_cars_acceleration_0_to_100_kmh_sec'))

    op.drop_table('cars')
    with op.batch_alter_table('transmissions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_transmissions_type_id'))
        batch_op.drop_index(batch_op.f('ix_transmissions_no_of_gears'))
        batch_op.drop_index(batch_op.f('ix_transmissions_name_official'))
        batch_op.drop_index(batch_op.f('ix_transmissions_name_display'))
        batch_op.drop_index(batch_op.f('ix_transmissions_manufacturer_id'))

    op.drop_table('transmissions')
    op.drop_table('texts_locations')
    op.drop_table('texts_companies')
    with op.batch_alter_table('images_locations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_images_locations_is_plan'))

    op.drop_table('images_locations')
    op.drop_table('images_companies')
    with op.batch_alter_table('games', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_games_name_full'))
        batch_op.drop_index(batch_op.f('ix_games_is_deleted'))
        batch_op.drop_index(batch_op.f('ix_games_genre_id'))
        batch_op.drop_index(batch_op.f('ix_games_game_series_id'))
        batch_op.drop_index(batch_op.f('ix_games_developer_id'))
        batch_op.drop_index(batch_op.f('ix_games_datetime_played'))
        batch_op.drop_index(batch_op.f('ix_games_datetime_edited'))
        batch_op.drop_index(batch_op.f('ix_games_datetime_added'))
        batch_op.drop_index(batch_op.f('ix_games_date_released'))

    op.drop_table('games')
    with op.batch_alter_table('forced_induction', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_forced_induction_name_official'))
        batch_op.drop_index(batch_op.f('ix_forced_induction_name_display'))
        batch_op.drop_index(batch_op.f('ix_forced_induction_manufacturer_id'))
        batch_op.drop_index(batch_op.f('ix_forced_induction_force_induction_type_id'))

    op.drop_table('forced_induction')
    with op.batch_alter_table('engines', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_engines_name_official'))
        batch_op.drop_index(batch_op.f('ix_engines_name_display'))
        batch_op.drop_index(batch_op.f('ix_engines_max_torque_nm'))
        batch_op.drop_index(batch_op.f('ix_engines_max_power_output_kw'))
        batch_op.drop_index(batch_op.f('ix_engines_manufacturer_id'))
        batch_op.drop_index(batch_op.f('ix_engines_fuel_type_id'))

    op.drop_table('engines')
    op.drop_table('texts_suspension')
    op.drop_table('texts_platforms')
    op.drop_table('texts_game_series')
    op.drop_table('texts_countries')
    op.drop_table('texts_competitions')
    with op.batch_alter_table('locations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_locations_name'))
        batch_op.drop_index(batch_op.f('ix_locations_is_fictional'))

    op.drop_table('locations')
    op.drop_table('images_suspension')
    with op.batch_alter_table('images_platforms', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_images_platforms_is_logo'))

    op.drop_table('images_platforms')
    with op.batch_alter_table('images_game_series', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_images_game_series_is_logo'))

    op.drop_table('images_game_series')
    op.drop_table('images_countries')
    op.drop_table('images_competitions')
    with op.batch_alter_table('companies', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_companies_owner_id'))
        batch_op.drop_index(batch_op.f('ix_companies_name_display'))
        batch_op.drop_index(batch_op.f('ix_companies_is_game_publisher'))
        batch_op.drop_index(batch_op.f('ix_companies_is_game_developer'))
        batch_op.drop_index(batch_op.f('ix_companies_is_car_part_manufacturer'))
        batch_op.drop_index(batch_op.f('ix_companies_is_car_manufacturer'))
        batch_op.drop_index(batch_op.f('ix_companies_date_established'))
        batch_op.drop_index(batch_op.f('ix_companies_country_id'))

    op.drop_table('companies')
    op.drop_table('users')
    with op.batch_alter_table('transmission_types', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_transmission_types_name'))

    op.drop_table('transmission_types')
    with op.batch_alter_table('texts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_texts_text_type'))
        batch_op.drop_index(batch_op.f('ix_texts_order'))

    op.drop_table('texts')
    with op.batch_alter_table('suspension', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_suspension_name_short'))
        batch_op.drop_index(batch_op.f('ix_suspension_name_full'))

    op.drop_table('suspension')
    with op.batch_alter_table('platforms', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_platforms_name_full'))

    op.drop_table('platforms')
    with op.batch_alter_table('instance_types', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_instance_types_name_short'))
        batch_op.drop_index(batch_op.f('ix_instance_types_name_full'))

    op.drop_table('instance_types')
    with op.batch_alter_table('instance_specializations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_instance_specializations_name_short'))
        batch_op.drop_index(batch_op.f('ix_instance_specializations_name_full'))

    op.drop_table('instance_specializations')
    with op.batch_alter_table('images', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_images_order'))

    op.drop_table('images')
    with op.batch_alter_table('game_states', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_game_states_order'))
        batch_op.drop_index(batch_op.f('ix_game_states_name'))

    op.drop_table('game_states')
    with op.batch_alter_table('game_series', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_game_series_name'))

    op.drop_table('game_series')
    with op.batch_alter_table('game_genres', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_game_genres_name'))

    op.drop_table('game_genres')
    with op.batch_alter_table('fuel_types', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_fuel_types_name'))

    op.drop_table('fuel_types')
    with op.batch_alter_table('engine_layouts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_engine_layouts_name'))

    op.drop_table('engine_layouts')
    with op.batch_alter_table('electric_engine_types', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_electric_engine_types_name'))

    op.drop_table('electric_engine_types')
    with op.batch_alter_table('drivetrains', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_drivetrains_name_short'))
        batch_op.drop_index(batch_op.f('ix_drivetrains_name_full'))

    op.drop_table('drivetrains')
    with op.batch_alter_table('countries', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_countries_name_display'))

    op.drop_table('countries')
    with op.batch_alter_table('competitions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_competitions_name_short'))
        batch_op.drop_index(batch_op.f('ix_competitions_name_full'))
        batch_op.drop_index(batch_op.f('ix_competitions_name_display'))
        batch_op.drop_index(batch_op.f('ix_competitions_is_virtual'))

    op.drop_table('competitions')
    with op.batch_alter_table('combustion_engine_types', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_combustion_engine_types_name'))

    op.drop_table('combustion_engine_types')
    with op.batch_alter_table('car_classes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_car_classes_name_us'))
        batch_op.drop_index(batch_op.f('ix_car_classes_name_euro'))
        batch_op.drop_index(batch_op.f('ix_car_classes_name_custom'))
        batch_op.drop_index(batch_op.f('ix_car_classes_name_alternative'))

    op.drop_table('car_classes')
    with op.batch_alter_table('body_styles', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_body_styles_name'))

    op.drop_table('body_styles')
    with op.batch_alter_table('assists', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_assists_name_short'))
        batch_op.drop_index(batch_op.f('ix_assists_name_full'))

    op.drop_table('assists')
    with op.batch_alter_table('aspirations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_aspirations_name'))

    op.drop_table('aspirations')
    # ### end Alembic commands ###
